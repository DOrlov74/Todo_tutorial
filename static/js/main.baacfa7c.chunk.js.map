{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","onLabelClick","setState","done","onMarkImportant","state","important","this","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","className","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","AppHeader","toDo","SearchPanel","term","onSearchChange","e","target","value","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","React","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","console","log","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","loginBox","visibleItems","search","doneCount","todoCount","Date","toString","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.baacfa7c.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nclass TodoListItem extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        /* this.state={done: false,\r\n        important: false}; */\r\n        this.onLabelClick=()=>{\r\n            //this.setState({done: true});\r\n            //console.log(`Done: ${this.props.label}`);\r\n            //console.log(this.state.done);\r\n            this.setState(({done})=>{\r\n                return{\r\n                    done: !done\r\n                };\r\n            });\r\n        };\r\n        this.onMarkImportant=()=>{\r\n            //this.setState({important:true});\r\n            this.setState((state)=>{\r\n                return {\r\n                    important: !state.important\r\n                };\r\n            });\r\n        };\r\n    };\r\n\r\n    render(){\r\n        const {label, onDeleted, \r\n            onToggleImportant, onToggleDone,\r\n            done, important\r\n        }= this.props;\r\n        \r\n        //const {done, important}=this.state;\r\n        let classNames='todo-list-item';\r\n        if (done){\r\n            classNames+=' done';\r\n        }\r\n        if(important){\r\n            classNames+=' important';\r\n        }\r\n        return (\r\n        <span \r\n            className={classNames}>\r\n            <span \r\n                className=\"todo-list-item-label\" \r\n                //onClick={this.onLabelClick}>\r\n                onClick={onToggleDone}>\r\n                {label}\r\n            </span>\r\n    \r\n            <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\"\r\n                //onClick={this.onMarkImportant}>\r\n                onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\"/>\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n    \r\n        </span>);\r\n    }\r\n}\r\n\r\n/* const TodoListItemFunc=({label, important=false})=>{\r\n    const style={\r\n        color: important? 'tomato': 'black'\r\n    }\r\n    return (\r\n    <span \r\n        className=\"todo-list-item\" \r\n        style={style}>{label}\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-exclamation\"/>\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm\">\r\n            <i className=\"fa fa-trash-o\"/>\r\n        </button>\r\n\r\n    </span>);\r\n}; */\r\n\r\nexport default TodoListItem;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList=({todos, onDeleted, onToggleImportant, onToggleDone})=>{\r\n    //const items=['Learn React','Build awesome App']\r\n\r\n    const elements=todos.map((item)=>{\r\n        const {id, ...itemProps}=item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                //label={item.label}\r\n                //important={item.important}\r\n                onDeleted={()=>onDeleted(id)}\r\n                onToggleImportant={()=>onToggleImportant(id)}\r\n                onToggleDone={()=>onToggleDone(id)}/>\r\n            </li>\r\n        );\r\n    });\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader=({toDo, done})=>{\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends Component{\r\n    /* const searchText='Type hear to search';\r\n    const searchStyle={\r\n        fontSize: '20px'\r\n    } */\r\n    state={\r\n        term: ''\r\n    };\r\n    onSearchChange=(e)=>{\r\n        const term=e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n    render(){\r\n        return (\r\n            <input className=\"search-input form-control\"\r\n            placeholder=\"Type to search\"\r\n            value={this.state.term}\r\n            onChange={this.onSearchChange}>\r\n            </input>\r\n        );\r\n    };\r\n};\r\n\r\nexport default SearchPanel;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\n\r\nclass ItemStatusFilter extends React.Component {\r\n\r\n    buttons=[\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n    render(){\r\n        const {filter, onFilterChange}=this.props;\r\n        const buttons=this.buttons.map(({name, label})=>{\r\n            const isActive=filter===name;\r\n            const clazz=isActive?'btn-info':'btn-outline-secondary';\r\n            return (\r\n            <button type=\"button\" className={`btn ${clazz}`} \r\n            key={name}\r\n            onClick={()=>onFilterChange(name)}>{label}</button>\r\n            );\r\n        });\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {/* <button type=\"button\" className=\"btn btn-info\">All</button>\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button> */\r\n                buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/* const ItemStatusFilterFunc=()=>{\r\n    return(\r\n        <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn btn-info\">All</button>\r\n            <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n            <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>\r\n        </div>\r\n    );\r\n}; */\r\n\r\nexport default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state={\r\n        label: ''\r\n    };\r\n    onLabelChange=(e)=>{\r\n        this.setState({label: e.target.value});\r\n    };\r\n    onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    render(){\r\n        return(\r\n            <form className=\"item-add-form  d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input type=\"text\" \r\n                className=\"form-control\"\r\n                onChange={this.onLabelChange}\r\n                placeholder=\"What needs to be done\"\r\n                value={this.state.label}></input>\r\n                <button \r\n                className=\"btn btn-outline-secondary\"\r\n                >Add Item</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport TodoList from '../todo-list';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nclass App extends Component {\r\n    maxId=100;\r\n    state={\r\n        todoData:[\r\n            this.createTodoItem('Drink coffee'),\r\n            this.createTodoItem('Make awesome App'),\r\n            this.createTodoItem('Have a lunch'),\r\n            // {label: 'Drink coffee', important:false, id:1},\r\n            // {label: 'Make awesome App', important:true, id:2},\r\n            // {label: 'Have a lunch', important:false, id:3},\r\n        ],\r\n        term: '',\r\n        filter: 'all'  //all, active, done\r\n    };\r\n    createTodoItem(label){\r\n        return{\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n    deleteItem=(id)=>{\r\n        this.setState(({todoData})=>{\r\n            const idx=todoData.findIndex((el)=>el.id===id);\r\n            //todoData.splice(idx,1);//do not modify current state\r\n            //const before=todoData.slice(0, idx);\r\n            //const after = todoData.slice(idx+1);\r\n            const newArray=[\r\n                ...todoData.slice(0, idx), \r\n                ...todoData.slice(idx+1)\r\n            ];\r\n\r\n            return{\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n    addItem=(text)=>{\r\n        console.log('added', text);\r\n        // generate id\r\n        /* const newItem={\r\n            label: text,\r\n            important: false,\r\n            id: this.maxId++\r\n        } */\r\n        const newItem=this.createTodoItem(text);\r\n        // add element in array\r\n        this.setState(({todoData})=>{\r\n            const newArr=[...todoData, newItem];\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        });\r\n    };\r\n    toggleProperty(arr, id, propName){\r\n            const idx=arr.findIndex((el)=>el.id===id);\r\n            const oldItem=arr[idx];\r\n            //copy & update object\r\n            const newItem={...oldItem, [propName]: !oldItem[propName]}; //update done property\r\n            //construct new array\r\n            return[\r\n                ...arr.slice(0, idx), \r\n                newItem,\r\n                ...arr.slice(idx+1)\r\n            ];\r\n    };\r\n    onToggleImportant=(id)=>{\r\n        this.setState(({todoData})=>{\r\n            return {\r\n                todoData: this.toggleProperty(todoData,id,'important')\r\n            };\r\n        });\r\n        console.log('toggle important', id);\r\n    };\r\n    onToggleDone=(id)=>{\r\n        this.setState(({todoData})=>{\r\n            /* const idx=todoData.findIndex((el)=>el.id===id);\r\n            const oldItem=todoData[idx];\r\n            //copy & update object\r\n            const newItem={...oldItem, done: !oldItem.done}; //update done property\r\n            //construct new array\r\n            const newArray=[\r\n                ...todoData.slice(0, idx), \r\n                newItem,\r\n                ...todoData.slice(idx+1)\r\n            ]; */\r\n            return {\r\n                todoData: this.toggleProperty(todoData,id,'done')\r\n            };\r\n        });\r\n        console.log('toggle done', id);\r\n    };\r\n    onSearchChange=(term)=>{\r\n        this.setState({term});\r\n    };\r\n    onFilterChange=(filter)=>{\r\n        this.setState({filter});\r\n    };\r\n    search(items, term){\r\n        if (term.length===0){\r\n            return items;\r\n        };\r\n        return items.filter((item)=>item.label.toLowerCase().indexOf(term.toLowerCase())>-1);\r\n    };\r\n    filter(items, filter){\r\n        switch(filter){\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item)=>!item.done);\r\n            case 'done':\r\n                return items.filter((item)=>item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render() {\r\n    const isLoggedIn=false;\r\n    const loginBox=<span>Login please</span>;\r\n    const welcomeBox=<span>Welcome back</span>;\r\n    const {todoData, term, filter}=this.state;\r\n    const visibleItems=this.filter(this.search(todoData, term),filter);\r\n    const doneCount=todoData\r\n        .filter((el=>el.done===true)).length;\r\n    const todoCount=todoData.length-doneCount;\r\n        return (\r\n            <div className=\"todo-app\">\r\n                {isLoggedIn? null: loginBox}\r\n            <span>{(new Date().toString())}</span>\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                \r\n                <div className=\"top-panel d-flex\">\r\n                <SearchPanel \r\n                    onSearchChange={this.onSearchChange}/>\r\n                <ItemStatusFilter filter={filter} \r\n                    onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n                <TodoList todos={visibleItems}\r\n                //onDeleted={(id)=>console.log('delete', id)}/>\r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone}/>\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app';\n\n\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}